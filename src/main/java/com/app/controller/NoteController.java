package com.app.controller;

import com.app.model.Note;
import com.app.repository.NoteRepository;
import com.app.repository.NoteRepositoryImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import com.app.model.date.Date;

import java.time.Instant;
import java.util.List;


@Controller    // This means that this class is a Controller
@RequestMapping(path = "/notes") // This means URL's start with /demo (after Application path)
public class NoteController {

    @Autowired
    // This means to get the bean called noteRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private NoteRepository noteRepository;

    @RequestMapping(method = RequestMethod.POST)
    public @ResponseBody
    String addNewNote(@RequestParam String title
            , @RequestParam String content) {

        Note n = new Note();
        n.setTitle(title);
        n.setContent(content);
        n.setInitialDate(Date.getCurrentDate().toString());
        n.setLastModificationDate(Date.getCurrentDate().toString());
        noteRepository.save(n);
        return "Saved\n";
    }

    @RequestMapping(method = RequestMethod.PUT)
    public @ResponseBody
    String updateNote(@RequestParam String title,
                      @RequestParam String content) {

        Note note = noteRepository.findByTitle(title);
        note.setContent(content);
        note.setLastModificationDate(Date.getCurrentDate().toString());
        noteRepository.save(note);

        return "Updated\n";
    }

    @RequestMapping( method = RequestMethod.DELETE)
    public @ResponseBody
    String deleteNote(@RequestParam String title) {

        Note note = noteRepository.findByTitle(title);
        noteRepository.delete(note);

        return "Deleted\n";
    }

    @RequestMapping( method = RequestMethod.GET)
    public @ResponseBody
    Note getNote(@RequestParam String title) {
        return noteRepository.findByTitle(title);
    }

    @RequestMapping( path = "/modMorThan", method = RequestMethod.GET)
    public @ResponseBody
    List<Note> getNote(@RequestParam int month) {
        return noteRepository
                .findByModificationDate(d ->
                        Date.dayDifference(Date.getCurrentDate(),d) >= month*30.5
                );
    }



    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<Note> getAllNotes() {
        return noteRepository.findAll();
    }


}